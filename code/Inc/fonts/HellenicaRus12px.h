#pragma once
/*******************************************************************************
* generated by lcd-image-converter rev.030b30d from 2019-03-17 01:38:34 +0500
* font
* filename: /home/basson/Develop/Main/lic/converter/HellenicaRus12px.xml
* name: HellenicaRus12px
* family: Hellenica
* size: 16
* style: Regular
* included characters:  !#0123456789°%.,
* antialiasing: no
* type: proportional
* encoding: UTF-8
* unicode bom: no
*
* preset name: Monochrome_Font
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Monochrome, Threshold Dither 255
* split to rows: no
* bits per pixel: 1
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: yes
*******************************************************************************/

/*
 typedef struct {
     const uint8_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     uint8_t dataLenght;
     } tImage;
 typedef struct {
     long int code;
     const tImage *image;
     } tChar;
 typedef struct {
     int length;
     const tChar *chars;
     } tFont;
*/

#include "../lib/qymui/types.hpp"



#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x20[8] = {
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x20 = { image_data_HellenicaRus12px_0x20,
    5, 12, 8, 8};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x21[12] = {
    // ∙██████∙
    // ∙██████∙
    // ∙∙∙██∙∙∙
    // ∙∙∙██∙∙∙
    // ∙∙∙██∙∙∙
    // ∙∙∙██∙∙∙
    // ∙∙∙██∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙██∙∙∙
    // ∙∙∙██∙∙∙
    // ∙∙∙∙∙∙∙∙
    0x7e, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x00
};
static const qymui::tImage HellenicaRus12px_0x21 = { image_data_HellenicaRus12px_0x21,
    8, 12, 8, 12};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x23[20] = {
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙██∙∙██∙∙∙∙
    // ∙∙∙██∙∙██∙∙∙∙
    // ∙██████████∙∙
    // ∙██████████∙∙
    // ∙∙∙██∙∙██∙∙∙∙
    // ∙∙∙██∙∙██∙∙∙∙
    // ∙██████████∙∙
    // ∙██████████∙∙
    // ∙∙∙██∙∙██∙∙∙∙
    // ∙∙∙██∙∙██∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x00, 0x00, 0xcc, 0x06, 0x60, 0xff, 0xc7, 0xfe, 0x0c, 0xc0, 0x66, 0x0f, 0xfc, 0x7f, 0xe0, 0xcc, 0x06, 0x60, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x23 = { image_data_HellenicaRus12px_0x23,
    13, 12, 8, 20};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x25[15] = {
    // ∙███∙∙∙∙∙∙
    // ∙█∙█∙∙∙∙∙∙
    // ∙███∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙███████∙∙
    // ∙███████∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙███∙∙
    // ∙∙∙∙∙█∙█∙∙
    // ∙∙∙∙∙███∙∙
    // ∙∙∙∙∙∙∙∙∙∙
    0x70, 0x14, 0x07, 0x00, 0x00, 0x7f, 0x1f, 0xc0, 0x00, 0x00, 0x07, 0x01, 0x40, 0x70, 0x00
};
static const qymui::tImage HellenicaRus12px_0x25 = { image_data_HellenicaRus12px_0x25,
    10, 12, 8, 15};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x2c[8] = {
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙██∙∙
    // ∙██∙∙
    // ∙██∙∙
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0xc0
};
static const qymui::tImage HellenicaRus12px_0x2c = { image_data_HellenicaRus12px_0x2c,
    5, 12, 8, 8};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x2e[8] = {
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙∙∙∙∙
    // ∙██∙∙
    // ∙██∙∙
    // ∙∙∙∙∙
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00
};
static const qymui::tImage HellenicaRus12px_0x2e = { image_data_HellenicaRus12px_0x2e,
    5, 12, 8, 8};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x30[21] = {
    // ∙∙∙∙█████∙∙∙∙∙
    // ∙∙∙███████∙∙∙∙
    // ∙∙███∙∙∙███∙∙∙
    // ∙∙██∙∙∙∙∙██∙∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙∙██∙∙∙∙∙██∙∙∙
    // ∙∙███∙∙∙███∙∙∙
    // ∙∙∙███████∙∙∙∙
    // ∙∙∙∙█████∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x0f, 0x80, 0x7f, 0x03, 0x8e, 0x0c, 0x18, 0x60, 0x31, 0x80, 0xc6, 0x03, 0x0c, 0x18, 0x38, 0xe0, 0x7f, 0x00, 0xf8, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x30 = { image_data_HellenicaRus12px_0x30,
    14, 12, 8, 21};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x31[20] = {
    // ∙██████∙∙∙∙∙∙
    // ∙██████∙∙∙∙∙∙
    // ∙∙∙∙∙██∙∙∙∙∙∙
    // ∙∙∙∙∙██∙∙∙∙∙∙
    // ∙∙∙∙∙██∙∙∙∙∙∙
    // ∙∙∙∙∙██∙∙∙∙∙∙
    // ∙∙∙∙∙██∙∙∙∙∙∙
    // ∙∙∙∙∙██∙∙∙∙∙∙
    // ∙∙∙∙∙██∙∙∙∙∙∙
    // ∙██████████∙∙
    // ∙██████████∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x7e, 0x03, 0xf0, 0x01, 0x80, 0x0c, 0x00, 0x60, 0x03, 0x00, 0x18, 0x00, 0xc0, 0x06, 0x03, 0xff, 0x1f, 0xf8, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x31 = { image_data_HellenicaRus12px_0x31,
    13, 12, 8, 20};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x32[21] = {
    // ∙██████████∙∙∙
    // ∙███████████∙∙
    // ∙∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙█████████∙∙
    // ∙∙█████████∙∙∙
    // ∙██∙∙∙∙∙∙∙∙∙∙∙
    // ∙██∙∙∙∙∙∙∙∙∙∙∙
    // ∙██∙∙∙∙∙∙∙∙∙∙∙
    // ∙███████████∙∙
    // ∙███████████∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x7f, 0xe1, 0xff, 0xc0, 0x03, 0x00, 0x0c, 0x1f, 0xf0, 0xff, 0x86, 0x00, 0x18, 0x00, 0x60, 0x01, 0xff, 0xc7, 0xff, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x32 = { image_data_HellenicaRus12px_0x32,
    14, 12, 8, 21};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x33[20] = {
    // ∙██████████∙∙
    // ∙██████████∙∙
    // ∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙∙∙∙∙∙∙██∙∙
    // ∙██████████∙∙
    // ∙██████████∙∙
    // ∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙∙∙∙∙∙∙██∙∙
    // ∙██████████∙∙
    // ∙██████████∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x7f, 0xe3, 0xff, 0x00, 0x18, 0x00, 0xc7, 0xfe, 0x3f, 0xf0, 0x01, 0x80, 0x0c, 0x00, 0x63, 0xff, 0x1f, 0xf8, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x33 = { image_data_HellenicaRus12px_0x33,
    13, 12, 8, 20};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x34[23] = {
    // ∙∙∙██∙∙∙∙██∙∙∙∙
    // ∙∙∙██∙∙∙∙██∙∙∙∙
    // ∙∙███∙∙∙∙██∙∙∙∙
    // ∙∙██∙∙∙∙∙██∙∙∙∙
    // ∙∙██∙∙∙∙∙██∙∙∙∙
    // ∙∙██∙∙∙∙∙██∙∙∙∙
    // ∙████████████∙∙
    // ∙████████████∙∙
    // ∙∙∙∙∙∙∙∙∙██∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙██∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙██∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x18, 0x60, 0x30, 0xc0, 0xe1, 0x81, 0x83, 0x03, 0x06, 0x06, 0x0c, 0x1f, 0xfe, 0x3f, 0xfc, 0x00, 0x60, 0x00, 0xc0, 0x01, 0x80, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x34 = { image_data_HellenicaRus12px_0x34,
    15, 12, 8, 23};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x35[21] = {
    // ∙██████████∙∙∙
    // ∙██████████∙∙∙
    // ∙██∙∙∙∙∙∙∙∙∙∙∙
    // ∙██∙∙∙∙∙∙∙∙∙∙∙
    // ∙█████████∙∙∙∙
    // ∙██████████∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙∙∙∙∙∙∙∙██∙∙
    // ∙██████████∙∙∙
    // ∙█████████∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x7f, 0xe1, 0xff, 0x86, 0x00, 0x18, 0x00, 0x7f, 0xc1, 0xff, 0x80, 0x03, 0x00, 0x0c, 0x00, 0x31, 0xff, 0x87, 0xfc, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x35 = { image_data_HellenicaRus12px_0x35,
    14, 12, 8, 21};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x36[21] = {
    // ∙∙█████████∙∙∙
    // ∙██████████∙∙∙
    // ∙██∙∙∙∙∙∙∙∙∙∙∙
    // ∙██∙∙∙∙∙∙∙∙∙∙∙
    // ∙██████████∙∙∙
    // ∙██████████∙∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙∙█████████∙∙∙
    // ∙∙∙███████∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x3f, 0xe1, 0xff, 0x86, 0x00, 0x18, 0x00, 0x7f, 0xe1, 0xff, 0x86, 0x03, 0x18, 0x0c, 0x60, 0x30, 0xff, 0x81, 0xfc, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x36 = { image_data_HellenicaRus12px_0x36,
    14, 12, 8, 21};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x37[21] = {
    // ∙███████████∙∙
    // ∙██████████∙∙∙
    // ∙∙∙∙∙∙∙∙██∙∙∙∙
    // ∙∙∙∙∙∙∙███∙∙∙∙
    // ∙∙∙∙∙∙∙██∙∙∙∙∙
    // ∙∙∙∙∙∙███∙∙∙∙∙
    // ∙∙∙∙∙███∙∙∙∙∙∙
    // ∙∙∙∙∙██∙∙∙∙∙∙∙
    // ∙∙∙∙███∙∙∙∙∙∙∙
    // ∙∙∙∙██∙∙∙∙∙∙∙∙
    // ∙∙∙███∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x7f, 0xf1, 0xff, 0x80, 0x0c, 0x00, 0x70, 0x01, 0x80, 0x0e, 0x00, 0x70, 0x01, 0x80, 0x0e, 0x00, 0x30, 0x01, 0xc0, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x37 = { image_data_HellenicaRus12px_0x37,
    14, 12, 8, 21};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x38[21] = {
    // ∙∙∙███████∙∙∙∙
    // ∙∙█████████∙∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙███████████∙∙
    // ∙∙█████████∙∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙∙█████████∙∙∙
    // ∙∙∙███████∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x1f, 0xc0, 0xff, 0x86, 0x03, 0x18, 0x0c, 0x7f, 0xf0, 0xff, 0x86, 0x03, 0x18, 0x0c, 0x60, 0x30, 0xff, 0x81, 0xfc, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x38 = { image_data_HellenicaRus12px_0x38,
    14, 12, 8, 21};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0x39[21] = {
    // ∙∙████████∙∙∙∙
    // ∙██████████∙∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙██∙∙∙∙∙∙∙██∙∙
    // ∙███████████∙∙
    // ∙∙██████████∙∙
    // ∙∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙∙∙∙∙∙∙∙∙██∙∙
    // ∙∙██████████∙∙
    // ∙∙█████████∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x3f, 0xc1, 0xff, 0x86, 0x03, 0x18, 0x0c, 0x7f, 0xf0, 0xff, 0xc0, 0x03, 0x00, 0x0c, 0x00, 0x30, 0xff, 0xc3, 0xfe, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0x39 = { image_data_HellenicaRus12px_0x39,
    14, 12, 8, 21};
#endif

#if (0x0 == 0x0)
static const uint8_t image_data_HellenicaRus12px_0xc2b0[12] = {
    // ∙∙███∙∙∙
    // ∙█∙∙∙█∙∙
    // ∙█∙∙∙█∙∙
    // ∙█∙∙∙█∙∙
    // ∙∙███∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙
    0x38, 0x44, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
static const qymui::tImage HellenicaRus12px_0xc2b0 = { image_data_HellenicaRus12px_0xc2b0,
    8, 12, 8, 12};
#endif


static const qymui::tChar HellenicaRus12px_array[] = {

#if (0x0 == 0x0)
  // character: ' '
  {0x20, &HellenicaRus12px_0x20},
#else
  // character: ' ' == ''
  {0x20, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '!'
  {0x21, &HellenicaRus12px_0x21},
#else
  // character: '!' == ''
  {0x21, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '#'
  {0x23, &HellenicaRus12px_0x23},
#else
  // character: '#' == ''
  {0x23, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '%'
  {0x25, &HellenicaRus12px_0x25},
#else
  // character: '%' == ''
  {0x25, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: ','
  {0x2c, &HellenicaRus12px_0x2c},
#else
  // character: ',' == ''
  {0x2c, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '.'
  {0x2e, &HellenicaRus12px_0x2e},
#else
  // character: '.' == ''
  {0x2e, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '0'
  {0x30, &HellenicaRus12px_0x30},
#else
  // character: '0' == ''
  {0x30, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '1'
  {0x31, &HellenicaRus12px_0x31},
#else
  // character: '1' == ''
  {0x31, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '2'
  {0x32, &HellenicaRus12px_0x32},
#else
  // character: '2' == ''
  {0x32, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '3'
  {0x33, &HellenicaRus12px_0x33},
#else
  // character: '3' == ''
  {0x33, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '4'
  {0x34, &HellenicaRus12px_0x34},
#else
  // character: '4' == ''
  {0x34, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '5'
  {0x35, &HellenicaRus12px_0x35},
#else
  // character: '5' == ''
  {0x35, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '6'
  {0x36, &HellenicaRus12px_0x36},
#else
  // character: '6' == ''
  {0x36, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '7'
  {0x37, &HellenicaRus12px_0x37},
#else
  // character: '7' == ''
  {0x37, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '8'
  {0x38, &HellenicaRus12px_0x38},
#else
  // character: '8' == ''
  {0x38, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '9'
  {0x39, &HellenicaRus12px_0x39},
#else
  // character: '9' == ''
  {0x39, &HellenicaRus12px_0x},
#endif

#if (0x0 == 0x0)
  // character: '°'
  {0xc2b0, &HellenicaRus12px_0xc2b0}
#else
  // character: '°' == ''
  {0xc2b0, &HellenicaRus12px_0x}
#endif

};


const qymui::tFont HellenicaRus12px = { 17, HellenicaRus12px_array };
